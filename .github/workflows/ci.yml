# Nom du flow
name: CI/CD Pipeline – Magasin Web

# Nom de la branch push sur et pull
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Repo Docker Hub : <SlitherinSnake>/lab2-magasin-web
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/lab2-magasin-web

jobs:
# ──────────────────────────── LINT ────────────────────────────
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with: { java-version: '21', distribution: 'temurin' }

      - name: Lint (Run Checkstyle)
        working-directory: lab2-magasin-web
        run: mvn --batch-mode -q verify

# ──────────────────────────── TEST ────────────────────────────
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with: { java-version: '21', distribution: 'temurin' }

      # Le POM est dans le dossier magasin/
      - name: Run Maven tests (module magasin)
        working-directory: lab2-magasin-web
        run: mvn --batch-mode clean test

# ──────────────────────────── BUILD DOCKER ────────────────────────────
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build docker-compose stack (db)
        run: docker compose -f docker-compose.yml build

# ──────────────────────────── Integration section maybe? To Do ────────────────────────────

# ──────────────────────────── PUBLISH DOCKER HUB ────────────────────────────
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        # Rebuild l'image
      - name: Build image for app only
        run: docker compose -f docker-compose.yml build app

      # Authentification Docker Hub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  

      # Tag + push seulement magasin-app
      - name: Tag & Push lab2-magasin-web  (Docker image)
        run: |
          DATE_TAG=$(date +%Y-%m-%d)
          # L’image locale s’appelle « magasin-app », ceci a été défini dans le docker-compose.yml
          docker tag magasin-web-app $IMAGE_NAME:latest
          docker tag magasin-web-app $IMAGE_NAME:$DATE_TAG
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$DATE_TAG