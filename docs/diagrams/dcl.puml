@startuml
title Diagramme de classe - Magasin Web (Vue logique)

' === Entités principales ===

class Employe {
  - id : int
  - nom : String
  - identifiant : String
  --
  + getId() : int
  + getNom() : String
  + getIdentifiant(): String
}

class Magasin {
  - id : int
  - nom : String
  - quartier : String
  --
  + getId() : int
  + getNom() : String
  + getQuartier() : String
}

class Produit {
  - id : int
  - nom : String
  - categorie : String
  - prix : float
  - quantite : int
  --
  + getId() : int
  + getNom() : String
  + getCategorie() : String
  + getPrix() : float
  + getQuantite() : int
}

class Vente {
  - id : int
  - dateVente : LocalDate
  - montantTotal : float
  --
  + getId() : int
  + getDateVente() : LocalDate
  + getMontantTotal() : float
}

class VenteProduit {
  - id : int
  - quantite : int
  --
  + getId() : int
  + getQuantite() : int
}

class Retour {
  - id : int
  - dateRetour : LocalDate
  --
  + getId() : int
  + getDateRetour() : LocalDate
}

class RetourProduit {
  - id : int
  - quantite : int
  --
  + getId() : int
  + getQuantite() : int
}

class StockMagasin {
  - id : int
  - quantite : int
  --
  + getId() : int
  + getQuantite() : int
}

class StockCentral {
  - id : int
  - quantiteDemandee : int
  - dateDemande : LocalDate
  --
  + getId() : int
  + getQuantiteDemandee() : int
  + getDateDemande() : LocalDate
}

class User {
  - id : long
  - username : String
  - password : String
}

class Role {
  - id : int
  - name : ERole
}

' === Relations de base ===

' Employé réalise ventes et retours
Employe "1" --> "*" Vente : effectue >
Employe "1" --> "*" Retour : traite >

' Vente liée à un magasin
Vente "*" --> "1" Magasin : lieu >

' Retour lié à une vente
Retour "1" --> "1" Vente : concerne >

' Vente *-- VenteProduit (composition)
Vente "1" *-- "*" VenteProduit : contient >

' Retour *-- RetourProduit (composition)
Retour "1" *-- "*" RetourProduit : contient >

' Lignes de vente/retour concernent un produit
VenteProduit "*" --> "1" Produit : cible >
RetourProduit "*" --> "1" Produit : cible >

' Magasin a un stock local
Magasin "1" --> "*" StockMagasin : possède >

' Produit présent dans stock local
StockMagasin "*" --> "1" Produit

' Stock central : une demande associe un produit à un magasin
StockCentral "*" --> "1" Produit
StockCentral "*" --> "1" Magasin

' Many-to-Many User ↔ Role
User "1" --> "*" Role : a pour rôles >

' (Optionnel) Employé possède un User
Employe "1" --> "1" User : compte >


@enduml
